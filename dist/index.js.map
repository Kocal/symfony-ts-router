{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/router.ts","webpack:///./src/singleton-router.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","TokenType","Router","context","routes","this","base_url","prefix","host","scheme","__assign","setRoutes","setRoutingData","data","setBaseUrl","setPrefix","setHost","setScheme","freeze","getRoutes","baseUrl","getBaseUrl","getScheme","getHost","getRoute","prefixedName","Error","generate","params","absolute","_this","route","unusedParams","url","isOptional","tokens","forEach","rawToken","token","parseToken","Text","type","pattern","Variable","hasDefault","defaults","encodedValue","encodeURIComponent","replace","Array","isArray","hosttokens","requirements","schemes","keys","length","queryParams_1","add","push","buildQueryParams","join","rbracket","RegExp","val","test","router_1","SingletonRouter","getInstance","instance","setData","singleton_router_1","__export","Routing","fos"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","export class Router\n{\n    private context: Context = {base_url: '', prefix: '', host: '', scheme: ''};\n    private routes: RoutesMap;\n\n    constructor(context: Partial<Context> = {}, routes: RoutesMap = {})\n    {\n        this.context = {...this.context, ...context};\n        this.setRoutes(routes);\n    }\n\n    setRoutingData(data: RoutingData): void\n    {\n        this.setBaseUrl(data.base_url);\n        this.setRoutes(data.routes);\n\n        if ('prefix' in data) {\n            this.setPrefix(data.prefix);\n        }\n\n        this.setHost(data.host);\n        this.setScheme(data.scheme);\n    }\n\n    setRoutes(routes: RoutesMap): void\n    {\n        this.routes = Object.freeze(routes);\n    }\n\n    getRoutes(): RoutesMap\n    {\n        return this.routes;\n    }\n\n    setBaseUrl(baseUrl: string): void\n    {\n        this.context.base_url = baseUrl;\n    }\n\n    getBaseUrl(): string\n    {\n        return this.context.base_url;\n    }\n\n    setPrefix(prefix: string): void\n    {\n        this.context.prefix = prefix;\n    }\n\n    setScheme(scheme: string): void\n    {\n        this.context.scheme = scheme;\n    }\n\n    getScheme(): string\n    {\n        return this.context.scheme;\n    }\n\n    setHost(host: string): void\n    {\n        this.context.host = host;\n    }\n\n    getHost(): string\n    {\n        return this.context.host;\n    }\n\n    getRoute(name: string): Route\n    {\n        const prefixedName = this.context.prefix + name;\n\n        if (prefixedName in this.routes) {\n            return this.routes[prefixedName]\n\n        } else if (name in this.routes) {\n            return this.routes[name]\n        }\n\n        throw new Error(`The route \"${name}\" does not exist.`);\n    }\n\n    generate(name: string, params: RouteParams = {}, absolute = false): string\n    {\n        const route = this.getRoute(name);\n\n        let unusedParams = {...params};\n        let url = '';\n        let isOptional = true;\n        let host = '';\n\n        route.tokens.forEach(rawToken => {\n\n            const token = this.parseToken(rawToken);\n\n            if (TokenType.Text === token.type) {\n                url = token.pattern + url;\n                isOptional = false;\n\n                return;\n            }\n\n            if (TokenType.Variable === token.type) {\n                let hasDefault = route.defaults && (token.name in route.defaults);\n                if (false === isOptional\n                    || !hasDefault\n                    || ((token.name in params) && params[token.name] != route.defaults[token.name])\n                ) {\n                    let value;\n\n                    if (token.name in params) {\n                        value = params[token.name];\n                        delete unusedParams[token.name];\n\n                    } else if (hasDefault) {\n                        value = route.defaults[token.name];\n\n                    } else if (isOptional) {\n                        return;\n\n                    } else {\n                        throw new Error(`The route \"${name}\" requires the parameter \"${token.name}\".`);\n                    }\n\n                    const isEmpty = true === value || false === value || '' === value;\n\n                    if (!isEmpty || !isOptional) {\n                        let encodedValue = encodeURIComponent(value).replace(/%2F/g, '/');\n\n                        if ('null' === encodedValue && null === value) {\n                            encodedValue = '';\n                        }\n\n                        url = token.prefix + encodedValue + url;\n                    }\n\n                    isOptional = false;\n\n                } else if (hasDefault && (token.name in unusedParams)) {\n                    delete unusedParams[token.name];\n                }\n\n                return;\n            }\n        });\n\n        if (url === '') {\n            url = '/';\n        }\n\n        if (Array.isArray(route.hosttokens)) {\n            route.hosttokens.forEach(rawToken => {\n                let value: string|number;\n\n                const token = this.parseToken(rawToken);\n\n                if (TokenType.Text === token.type) {\n                    host = token.pattern + host;\n                    return;\n                }\n\n                if (TokenType.Variable === token.type) {\n                    if (token.name in params) {\n                        value = params[token.name];\n                        delete unusedParams[token.name];\n\n                    } else if (route.defaults && (token.name in route.defaults)) {\n                        value = route.defaults[token.name];\n                    }\n\n                    host = token.prefix + value + host;\n                }\n            });\n        }\n\n        url = this.getBaseUrl() + url;\n        if (route.requirements && (\"_scheme\" in route.requirements) && this.getScheme() != route.requirements[\"_scheme\"]) {\n            url = route.requirements[\"_scheme\"] + \"://\" + (host || this.getHost()) + url;\n\n        } else if (\"undefined\" !== typeof route.schemes\n            && \"undefined\" !== typeof route.schemes[0]\n            && this.getScheme() !== route.schemes[0]\n        ) {\n            url = route.schemes[0] + \"://\" + (host || this.getHost()) + url;\n\n        } else if (host && this.getHost() !== host) {\n            url = this.getScheme() + \"://\" + host + url;\n\n        } else if (absolute === true) {\n            url = this.getScheme() + \"://\" + this.getHost() + url;\n        }\n\n        if (Object.keys(unusedParams).length > 0) {\n            let queryParams = [];\n            const add = (key, value) => {\n                value = (typeof value === 'function') ? value() : value;\n                value = (value === null) ? '' : value;\n\n                queryParams.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n            };\n\n            for (let prefix in unusedParams) {\n                this.buildQueryParams(prefix, unusedParams[prefix], add);\n            }\n\n            url = url + '?' + queryParams.join('&').replace(/%20/g, '+');\n        }\n\n        return url;\n    }\n\n    private buildQueryParams(prefix: string, params: any[]|object|string, add: QueryParamAddFunction): void\n    {\n        const rbracket = new RegExp(/\\[\\]$/);\n\n        if (params instanceof Array) {\n            params.forEach((val, i) => {\n                if (rbracket.test(prefix)) {\n                    add(prefix, val);\n                } else {\n                    this.buildQueryParams(`${prefix}[${typeof val === 'object' ? i : ''}]`, val, add);\n                }\n            });\n\n        } else if (typeof params === 'object') {\n            for (let name in params) {\n                this.buildQueryParams(`${prefix}[${name}]`, params[name], add);\n            }\n\n        } else {\n            add(prefix, params);\n        }\n    }\n\n    private parseToken(token: Token): ParsedToken\n    {\n        let type, prefix, pattern, name;\n\n        switch (token[0]) {\n            case TokenType.Text:\n                [type, pattern] = token;\n                break;\n\n            case TokenType.Variable:\n                [type, prefix, pattern, name] = token;\n                break;\n\n            default:\n                throw new Error(`The token type \"${type}\" is not supported.`);\n        }\n\n        return {type, prefix, pattern, name}\n    }\n}\n\nexport type RouteDefaults = {[index:string]: string|number}\n\nexport type RouteRequirements = {[index:string]: string|number}\n\nexport type RouteParams = {[index:string]: any}\n\nexport type RoutesMap = {[index: string]: Route}\n\nexport interface QueryParamAddFunction\n{\n    (prefix: string, params: any): void;\n}\n\nexport interface Route\n{\n    tokens: Token[]\n    defaults?: RouteDefaults\n    requirements?: RouteRequirements\n    hosttokens?: Token[]\n    schemes?: string[]\n    methods?: string[]\n}\n\nexport interface RoutingData extends Context\n{\n    routes: RoutesMap\n}\n\nexport interface Context\n{\n    base_url: string;\n    prefix?: string\n    host?: string\n    scheme?: string\n}\n\nexport enum TokenType\n{\n    Text = 'text',\n    Variable = 'variable',\n}\n\nexport type Token = string[]\n\nexport interface ParsedToken\n{\n    type: TokenType\n    prefix: string\n    pattern: string\n    name: string\n}\n","import {Router, RoutingData} from \"./router\";\n\nexport class SingletonRouter\n{\n    private static readonly instance = new Router();\n\n    static getInstance(): Router\n    {\n        return this.instance;\n    }\n\n    static setData(data: RoutingData): void\n    {\n        SingletonRouter.getInstance().setRoutingData(data);\n    }\n}","import {SingletonRouter} from \"./singleton-router\";\n\nexport * from \"./router\";\n\nexport const Routing = SingletonRouter.getInstance();\n\nexport const fos = {\n    Router: SingletonRouter\n};"],"sourceRoot":""}